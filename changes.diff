diff --git a/src/App.tsx b/src/App.tsx
index 1e2259a..8212b99 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -1,4 +1,4 @@
-import { useEffect, useState, useCallback } from 'react';
+import { useEffect, useState } from 'react';
 import * as VIAM from "@viamrobotics/sdk";
 import AppInterface from './AppInterface';
 import Cookies from "js-cookie";
@@ -18,7 +18,7 @@ function App() {
   const [viamClient, setViamClient] = useState<VIAM.ViamClient | null>(null);
   const [robotClient, setRobotClient] = useState<VIAM.RobotClient | null>(null);
   const [fetchTimestamp, setFetchTimestamp] = useState<Date | null>(null);
-  const [loadingPasses, setLoadingPasses] = useState<Set<string>>(new Set());
+  const [loadingPasses] = useState<Set<string>>(new Set());
 
   const machineNameMatch = window.location.pathname.match(machineNameRegex);
   const machineName = machineNameMatch ? machineNameMatch[1] : null;
@@ -170,6 +170,8 @@ function App() {
       const processedPasses: Pass[] = tabularData.map((item: any) => {
         const pass = item.data!.readings!;
         
+        const buildInfo = pass.build_info ? {...pass.build_info} : {};
+                
         return {
           start: new Date(pass.start),
           end: new Date(pass.end),
@@ -181,9 +183,16 @@ function App() {
           })): [],
           success: pass.success ?? true,
           pass_id: pass.pass_id,
-          err_string: pass.err_string || null
+          err_string: pass.err_string || null,
+          // If no build_info exists, create a default one with basic run information
+          build_info: Object.keys(buildInfo).length > 0 ? buildInfo : {
+            run_id: pass.pass_id,
+            timestamp: pass.start,
+            note: "No build info available"
+          }
         };
       });
+      
       setPassSummaries(processedPasses);
       console.log("Fetching data end");
     };
diff --git a/src/AppInterface.css b/src/AppInterface.css
index faa8d2a..808d3a6 100644
--- a/src/AppInterface.css
+++ b/src/AppInterface.css
@@ -549,7 +549,7 @@ button:focus {
 }
 
 .expanded-content td {
-  padding: 0;
+  padding: 0 12px;
   border-bottom: 1px solid #e4e4e7;
 }
 
@@ -567,7 +567,7 @@ button:focus {
 .passes-container {
   display: flex;
   flex-direction: column;
-  padding: 4px;
+  padding: 4px 0;
   gap: 1rem;
 }
 
@@ -580,7 +580,11 @@ button:focus {
 }
 
 .pass-files-section {
-  margin: 0 5px;
+  margin: 0;
+}
+
+.pass-files-section h4 {
+  margin: 0 0 8px 2px;
 }
 
 .steps-grid {
@@ -1099,13 +1103,83 @@ button:focus {
 }
 
 .no-files-message, .no-videos-message {
-  grid-: 1 / -1;
+  grid-column: 1 / -1;
   text-align: center;
   padding: 0.25rem 0 0;
   color: #9ca3af;
   font-size: 12px;
 }
 
-.no-files-message {
-  text-align: left;
+/* Build Info Styles */
+.build-info-section {
+  margin: 12px 0 12px 2px;
+  padding: 0;
+}
+
+.build-info-section h4 {
+  margin: 0 0 8px;
+  font-size: 14px;
+  font-weight: 600;
+  color: #374151;
+}
+
+.build-info-grid {
+  display: flex;
+  flex-wrap: wrap;
+  align-items: flex-start;
+  gap: 8px;
+}
+
+.build-info-item {
+  display: flex;
+  flex-direction: column;
+  gap: 6px;
+  margin-right: 16px;
+  margin-bottom: 0px;
+}
+
+.build-info-label {
+  font-size: 11px;
+  font-weight: 500;
+  color: #9ca3af;
+  letter-spacing: 0.025em;
+}
+
+.build-info-value {
+  font-size: 12px;
+  color: #1f2937;
+  font-family: ui-monospace, SFMono-Regular, "SF Mono", Monaco, Inconsolata, "Roboto Mono", Consolas, "Liberation Mono", Menlo, monospace;
+  padding: 4px 8px;
+  border-radius: 4px;
+  border: 1px solid #d1d5db;
+  display: inline-block;
+  word-break: break-all;
+  font-weight: 500;
+}
+
+/* Error message styling */
+.error-message {
+  background-color: #fef2f2;
+  border: 1px solid #fecaca;
+  border-radius: 6px;
+  padding: 12px;
+  margin: 8px 0;
+}
+
+.error-message-text {
+  font-size: 12px;
+  color: #dc2626;
+  line-height: 1.4;
+  word-wrap: break-word;
+}
+
+/* Pass ID styling */
+.pass-id {
+  font-family: ui-monospace, SFMono-Regular, "SF Mono", Monaco, Inconsolata, "Roboto Mono", Consolas, "Liberation Mono", Menlo, monospace;
+  font-size: 11px;
+  color: #6b7280;
+  background-color: #f3f4f6;
+  padding: 2px 6px;
+  border-radius: 4px;
+  word-break: break-all;
 }
\ No newline at end of file
diff --git a/src/AppInterface.tsx b/src/AppInterface.tsx
index 7b243be..8e82d5e 100644
--- a/src/AppInterface.tsx
+++ b/src/AppInterface.tsx
@@ -1,4 +1,4 @@
-import React, { useState, useEffect, useMemo, useCallback } from 'react';
+import React, { useState } from 'react';
 import * as VIAM from "@viamrobotics/sdk";
 import './AppInterface.css';
 import StepVideosGrid from './StepVideosGrid';
@@ -33,6 +33,15 @@ export interface Pass {
   success: boolean;
   pass_id: string;
   err_string?: string | null;
+  build_info?: {
+    id?: string;
+    name?: string;
+    version?: string;
+    description?: string;
+    git_revision?: string;
+    date_compiled?: string;
+    // Add other build fields as needed
+  };
 }
 
 const AppInterface: React.FC<AppViewProps> = ({ 
@@ -203,6 +212,41 @@ const AppInterface: React.FC<AppViewProps> = ({
                         <tr className="expanded-content">
                           <td colSpan={9}>
                             <div className="pass-details">
+                              {/* Simplified build info section */}
+                              <div className="build-info-section">
+                                <h4>Build information</h4>
+                                {pass.build_info && Object.keys(pass.build_info).length > 0 ? (
+                                  <div className="build-info-grid">
+                                    {/* Version */}
+                                    {pass.build_info.version && (
+                                      <div className="build-info-item">
+                                        <span className="build-info-label">Version</span>
+                                        <span className="build-info-value">{pass.build_info.version}</span>
+                                      </div>
+                                    )}
+                                    
+                                    {/* Git Revision */}
+                                    {pass.build_info.git_revision && (
+                                      <div className="build-info-item">
+                                        <span className="build-info-label">Git revision</span>
+                                        <span className="build-info-value">{pass.build_info.git_revision}</span>
+                                      </div>
+                                    )}
+                                    
+                                    {/* Date Compiled */}
+                                    {pass.build_info.date_compiled && (
+                                      <div className="build-info-item">
+                                        <span className="build-info-label">Date compiled</span>
+                                        <span className="build-info-value">{pass.build_info.date_compiled}</span>
+                                      </div>
+                                    )}
+                                  </div>
+                                ) : (
+                                  <div className="build-info-message">
+                                    Build information not available for this run.
+                                  </div>
+                                )}
+                              </div>
                               <div className="passes-container">
                                 <div className="steps-grid">
                                   {pass.steps.map((step: Step) => {
@@ -315,7 +359,7 @@ const AppInterface: React.FC<AppViewProps> = ({
                                           flexWrap: 'wrap',
                                           gap: '8px',
                                           overflowY: 'auto',
-                                          padding: '4px',
+                                          padding: '4px 0',
                                         }}>
                                           {passFiles.map((file, fileIndex) => {
                                             const fileName = file.metadata?.fileName?.split('/').pop() || 'Unknown file';
diff --git a/src/VideoModal.tsx b/src/VideoModal.tsx
index 6d98847..9580d1f 100644
--- a/src/VideoModal.tsx
+++ b/src/VideoModal.tsx
@@ -1,6 +1,5 @@
 import React, { useState, useEffect } from 'react';
 import * as VIAM from "@viamrobotics/sdk";
-import { extractCameraName } from './lib/videoUtils';
 import { createVideoStreamFromBase64 } from './lib/videoUtils';
 
 interface VideoModalProps {
